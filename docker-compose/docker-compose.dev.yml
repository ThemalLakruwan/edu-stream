version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    ports: ["27017:27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    command: redis-server --requirepass password

  minio:
    image: minio/minio:latest
    ports: ["9000:9000", "9001:9001"]
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  auth-service:
    build: ../auth-service
    env_file:
      - ../auth-service/.env
    environment:
      # IMPORTANT: use service names + credentials
      MONGODB_URI: mongodb://admin:password@mongodb:27017/edustream-auth?authSource=admin
      REDIS_URL: redis://:password@redis:6379

    depends_on:
      - mongodb
      - redis
    ports: ["3001:3001"]

  course-service:
    build: ../course-service
    env_file:
      - ../course-service/.env
    environment:
      # DB (use the service name on the Docker network)
      MONGODB_URI: mongodb://admin:password@mongodb:27017/edustream-courses?authSource=admin

      # Redis (note the password and the service name)
      REDIS_URL: redis://:password@redis:6379

      # Auth service (used by verifyToken middleware)
      AUTH_SERVICE_URL: http://auth-service:3001

      # MinIO / S3 (used by fileService)
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin123
      S3_BUCKET: edustream

      # CORS
      FRONTEND_URL: http://localhost:3000
    ports: ["3002:3002"]
    depends_on:
      - mongodb
      - redis
      - minio
      - auth-service

  payment-service:
    build: ../payment-service
    env_file:
      - ../payment-service/.env
    environment:
      # Use Docker DNS name + credentials
      MONGODB_URI: mongodb://admin:password@mongodb:27017/edustream-payments?authSource=admin
      REDIS_URL: redis://:password@redis:6379
      AUTH_SERVICE_URL: http://auth-service:3001
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: ${JWT_SECRET:-f584cf7022128b03f15b33ce90f3d0b0bf83d30a3ca68db74e77914c6af9baea323b103752da6880a011003f13084ef2d74d1d52f6c428cb401d396610376db5}
    depends_on:
      - mongodb
      - redis
      - auth-service
    ports: ["3003:3003"]

  nginx:
    image: nginx:alpine
    ports: ["8080:80"]
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - auth-service
      - course-service
      - payment-service

volumes:
  mongodb_data:
  minio_data:
